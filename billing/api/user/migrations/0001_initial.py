# Generated by Django 4.1.7 on 2023-03-07 10:54

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Roles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role_name",
                    models.CharField(
                        choices=[
                            ("SUPERUSER", "Superuser"),
                            ("OWNER", "Owner"),
                            ("DISTRIBUTOR", "Distributor"),
                            ("SALES", "Sales"),
                            ("HEAD_OFFICE", "Head Office"),
                            ("CUSTOMER", "Customer"),
                        ],
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="NewUSER",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email Address"
                    ),
                ),
                ("user_name", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(blank=True, max_length=150)),
                (
                    "distID",
                    models.IntegerField(
                        default=0, max_length=3, verbose_name="Distributor ID"
                    ),
                ),
                (
                    "salesid",
                    models.IntegerField(
                        default=0, max_length=3, verbose_name="Sales ID"
                    ),
                ),
                (
                    "hd_id",
                    models.IntegerField(
                        default=0, max_length=3, verbose_name="Head Office ID"
                    ),
                ),
                ("joining_date", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("renew_year", models.IntegerField(default=1, max_length=2)),
                ("last_ip", models.GenericIPAddressField(default=0)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "role_id",
                    models.ForeignKey(
                        db_column="role_name",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.roles",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={"abstract": False,},
            managers=[("object", django.db.models.manager.Manager()),],
        ),
    ]
